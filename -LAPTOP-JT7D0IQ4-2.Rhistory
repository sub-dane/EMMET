SET "OBSERVACIONES" = ?,
"Caso_imputacion" = ?,
`%s` = ?,
"EDITADO" = ?
WHERE "LLAVE" = ? AND "Variables" = ?',
meses_c[mes]),
param = list(
input$OBSERVACIONES,
input$Caso_imputacion,
input[[meses_c[mes]]], # Acceder al valor de la columna directamente usando [[]]
credentials()$info$user,
row_selection,
row_selection2
))
removeModal()
#, "EDITADO" = credentials()$info$user
#   credentials()$info$user
})
output$responses_table <- DT::renderDataTable({
table <- dataCrit() %>% select("LLAVE","ID_NUMORD","Variables",meses_c[mes-1],
meses_c[mes],"variacion","Caso_imputacion",
"OBSERVACIONES","EDITADO")#,"NOMBRE_ESTAB","DOMINIOEMMET39"
#names(table) <- c("ID","Date", "Name", "Sex", "Comment", "Age")
table <- datatable(table,
selection = "single",
rownames = FALSE,
options = list(searching = FALSE, lengthChange = FALSE)
)
})
observeEvent(input$export_button, priority = 20,{
SQL_df <- dbReadTable(pool, "responses_df")
b<-choose.dir()
#dir <- tclvalue(tk_chooseDirectory(title = "Seleccionar directorio", message = "Por favor seleccione un directorio"))
#write.csv(responses_df,"EMMET_Critica.csv")
setwd(b)
write.csv(SQL_df,"EMMET_Critica.csv")
})
# output$tabla <- renderDataTable({
#
#   tabla <- dataEstab() %>%
#     select(NOMBRE_ESTAB,Variables,Octubre,Noviembre,variacion,Caso_imputacion)
#     #mutate(Observaciones = map(rowname, .f = ~textinput_gt(.x,"_textinput", label = paste("My text label", .x))))
#   colnames(tabla)[c(3,4)] <- c("Octubre 2022","Noviembre 2022")
#   tabla
# },options = list(pageLength = 50))
output$tablaserie <- renderDataTable({
tabla <- base_variables() %>%
select(ANIO,MES,NOMBRE_ESTAB,input$variable)
tabla
},options = list(pageLength = 100))
output$boxplot <- renderPlotly({
tabla <- base_variables()
smexter_a=ts(tabla[,input$variable],start=c(2018,1),frequency=12)
ts_plot(smexter_a,
title = paste0("Serie ",as.character(input$variable)," para el establecimiento ",as.character(input$nombre3)),
Ytitle = "Valor",
Xtitle = "Año",
Xgrid = TRUE,
Ygrid = TRUE)
})
output$anio_imp <- renderText({
dataEstab()$ANIO[1]
})
output$id_numord_imp <- renderText({
dataEstab()$ID_NUMORD[1]
})
output$dominio_imp <- renderText({
dataEstab()$DOMINIOEMMET39[1]
})
output$departamento_imp <- renderText({
dataEstab()$NOMBREDEPARTAMENTO[1]
})
output$municipio_imp <- renderText({
dataEstab()$NOMBREMUNICIPIO[1]
})
output$contribucion_imp<-renderText({
paste0("Ranking: ",contribucion_ranking())
})
# shinyInput = function(FUN, len, id, ...) {
#   #validate(need(character(len)>0,message=paste("")))
#   inputs = character(len)
#   for (i in seq_len(len)) {
#     inputs[i] = as.character(FUN(paste0(id, i), label = NULL, ...))
#   }
#   inputs
# }
output$tabla2<- renderDataTable({
# Filtrar la tabla segC:n la selección del usuario
if (input$capitulo_filtro == "Capitulo 3") {
# Si se selecciona "Capítulo 2", filtrar la tabla segC:n la lista "capitulo_2"
tabla <- desf %>%select(NOMBRE_ESTAB,Variables,meses_c[mes-1],meses_c[mes],variacion,Caso_imputacion) %>%
filter((Variables %in% capitulo3) & Caso_imputacion==input$tipo)
#pool <- dbPool(RSQLite::SQLite(), dbname = "Cap3")
} else {
# Si se selecciona "Capitulo 3", filtrar la tabla segC:n la lista "capitulo_3"
tabla <- desf %>%select(NOMBRE_ESTAB,Variables,meses_c[mes-1],meses_c[mes],variacion,Caso_imputacion) %>%
filter(!(Variables %in% capitulo3) & Caso_imputacion==input$tipo)
#pool <- dbPool(RSQLite::SQLite(), dbname = "Cap2")
}
# Devolver la tabla filtrada
colnames(tabla)[c(3,4)] <- c(paste0(meses_c[mes-1]," ",anio),paste0(meses_c[mes]," ",anio))
tabla
},options = list(pageLength = 50))
# Critica -----------------------------------------------------------------
#
#
#   dataCrit <- reactive({
#     #input$id_num
#     input$submit_edit
#     datos3 <- dbReadTable(pool,"responses_df")
#
#
#     if(input$id_num!="Todos"){
#       datos3 <- datos3 %>% filter(ID_NUMORD==input$id_num)
#     }
#     if(input$anio_crit!="Todos"){
#       datos3 <- datos3 %>% filter(ANIO==input$anio_crit)
#     }
#     if(input$mes_crit!="Todos"){
#       datos3 <- datos3 %>% filter(MES==input$mes_crit)
#     }
#
#     return(datos3)
#   })
#
#
#
#   # dataCrit_0 <- reactive({
#   #
#   #   input$submit_edit
#   #   dbReadTable(pool, "responses_df")
#   #
#   #
#   # })
#
#   entry_form <- function(button_id){
#
#     showModal(
#       modalDialog(
#         div(id=("entry_form"),
#             tags$head(tags$style(".modal-dialog{ width:400px}")), #Modify the width of the dialog
#             tags$head(tags$style(HTML(".shiny-split-layout > div {overflow: visible}"))), #Necessary to show the input options
#             fluidPage(
#               fluidRow(
#                 splitLayout(
#                   cellWidths = c("250px", "100px"),
#                   cellArgs = list(style = "vertical-align: top"),
#                   #textInput("name", labelMandatory("Name"), placeholder = ""),
#                   #selectInput("sex", labelMandatory("Sex"), multiple = FALSE, choices = c("", "M", "F"))
#                 ),
#                 #sliderInput("age", "Age", 0, 100, 1, ticks = TRUE, width = "354px"),
#                 textAreaInput("Caso_imputacion", "Caso_imputacion", placeholder = "", height = 100, width = "354px"),
#                 textAreaInput("OBSERVACIONES", "OBSERVACIONES", placeholder = "", height = 100, width = "354px"),
#                 textAreaInput("variacion", "variacion", placeholder = "", height = 100, width = "354px"),
#                 #helpText(labelMandatory(""), paste("Mandatory field.")),
#                 actionButton(button_id, "Submit")
#               ),
#               easyClose = TRUE
#             )
#         )
#       )
#     )
#   }
#
#
#   observeEvent(input$edit_button, priority = 20,{
#
#     SQL_df <- dbReadTable(pool, "responses_df")
#
#     showModal(
#       if(length(input$responses_table_rows_selected) > 1 ){
#         modalDialog(
#           title = "Warning",
#           paste("Please select only one row." ),easyClose = TRUE)
#       } else if(length(input$responses_table_rows_selected) < 1){
#         modalDialog(
#           title = "Warning",
#           paste("Please select a row." ),easyClose = TRUE)
#       })
#
#     if(length(input$responses_table_rows_selected) == 1 ){
#
#       entry_form("submit_edit")
#       updateTextAreaInput(session, "Caso_imputacion", value = SQL_df[input$responses_table_rows_selected, "Caso_imputacion"])
#       updateTextAreaInput(session, "OBSERVACIONES", value = SQL_df[input$responses_table_rows_selected, "OBSERVACIONES"])
#       updateTextAreaInput(session, "variacion", value = SQL_df[input$responses_table_rows_selected, "variacion"])
#       #updateTextAreaInput(session, "EDITADO", value = SQL_df[input$responses_table_rows_selected, "EDITADO"])
#
#     }
#
#   })
#
#   observeEvent(input$submit_edit, priority = 20, {
#
#     datos3 <- dbReadTable(pool, "responses_df")
#
#
#     if(input$id_num!="Todos"){
#       datos3 <- datos3 %>% filter(ID_NUMORD==input$id_num)
#     }
#     if(input$anio_crit!="Todos"){
#       datos3 <- datos3 %>% filter(ANIO==input$anio_crit)
#     }
#     if(input$mes_crit!="Todos"){
#       datos3 <- datos3 %>% filter(MES==input$mes_crit)
#     }
#
#     row_selection <- datos3[input$responses_table_row_last_clicked, "LLAVE"]
#     row_selection2 <- datos3[input$responses_table_row_last_clicked, "Variables"]
#     #row_selection<-"123455465"
#     dbExecute(pool, sprintf('UPDATE "responses_df" SET "OBSERVACIONES" = ? , "Caso_imputacion" = ?, "variacion" = ?, "EDITADO" = ?
#                             WHERE "LLAVE" = ("%s") AND "Variables" =  ("%s")' , row_selection, row_selection2 ),
#               param = list(
#                 input$OBSERVACIONES,
#                 input$Caso_imputacion,
#                 input$variacion,
#                 credentials()$info$user))
#     removeModal()
#
#     #, "EDITADO" = credentials()$info$user
#     #   credentials()$info$user
#
#
#   })
#   output$responses_table <- DT::renderDataTable({
#
#     table <- dataCrit() %>% select("LLAVE","ID_NUMORD","Variables","Octubre",
#                                    "Noviembre","variacion","Caso_imputacion",
#                                    "OBSERVACIONES","EDITADO")#,"NOMBRE_ESTAB","DOMINIOEMMET39"
#     #names(table) <- c("ID","Date", "Name", "Sex", "Comment", "Age")
#     table <- datatable(table,
#                        rownames = FALSE,
#                        options = list(searching = FALSE, lengthChange = FALSE)
#     )
#   })
#
#   observeEvent(input$export_button, priority = 20,{
#
#     SQL_df <- dbReadTable(pool, "responses_df")
#     b<-choose.dir()
#     #dir <- tclvalue(tk_chooseDirectory(title = "Seleccionar directorio", message = "Por favor seleccione un directorio"))
#     #write.csv(responses_df,"EMMET_Critica.csv")
#     setwd(b)
#     write.csv(SQL_df,"EMMET_Critica.csv")
#
#   })
}
shinyApp(ui = ui, server = server)
View(tematica)
runApp('Shiny_alertas/app_fun_critica_2.R')
runApp('Shiny_alertas/app_fun_critica_2.R')
runApp('Shiny_alertas/app_fun_critica_2.R')
View(desf)
View(base_variables_encuesta)
runApp('Shiny_alertas/app_fun_critica_2.R')
View(tematica)
runApp('Shiny_alertas/app_fun_critica_2.R')
View(base_variables_encuesta)
base_variables_encuesta <- base_panel %>%
select(ANIO,MES,NOVEDAD,DEPARTAMENTO,NOMBREMPIO,
NORDEST,NOMBRE_ESTABLECIMIENTO,DOMINIO_39,CLASE_CIIU4,
NPERS_EP,AJU_SUELD_EP,NPERS_ET,
AJU_SUELD_ET,NPERS_ETA,
AJU_SUELD_ETA,NPERS_APREA,AJU_SUELD_APREA,
NPERS_OP,AJU_SUELD_OP,NPERS_OT,
AJU_SUELD_OT,NPERS_OTA,
AJU_SUELD_OTA,NPERS_APREO,AJU_SUELD_APREO,
AJU_HORAS_ORDI,AJU_HORAS_EXT,
AJU_PRODUCCION,AJU_VENTASIN,
AJU_VENTASEX,EXISTENCIAS)
base_variables_encuesta=as.data.frame(base_variables_encuesta)
View(base_variables_encuesta)
base_variables_encuesta=as.data.frame(base_variables_encuesta)
des <- base_variables_encuesta %>%
filter(ANIO==anio & MES%in%c(mes-1,mes))  %>%
pivot_longer(cols=colnames(base_variables_encuesta)[10:length(colnames(base_variables_encuesta))],names_to = "Variables",values_to ="Valores") %>%
pivot_wider(names_from = "MES",values_from = "Valores")
des=as.data.frame(des)
colnames(des)[c(10,11)] <- c(meses_c[mes-1],meses_c[mes])
des$variacion <- round(((abs(des[,paste0(meses_c[mes])]-des[,paste0(meses_c[mes-1])])/des[,paste0(meses_c[mes-1])])*100),2)
des$variacion[des[, paste0(meses_c[mes])] != 0 & des[, paste0(meses_c[mes - 1])] == 0] <- 100
des$variacion[des[, paste0(meses_c[mes])] == 0 & des[, paste0(meses_c[mes - 1])] == 0] <- 0
varinteres=paste0(variablesinte,"_caso_de_imputacion")
des2 <- alertas %>% filter(ANIO==anio & MES==mes) %>%
pivot_longer(cols=varinteres,names_to = "Variables",values_to ="Caso_imputacion")  %>%
select(ANIO,DEPARTAMENTO,NOMBREMPIO,NORDEST,NOMBRE_ESTABLECIMIENTO,DOMINIO_39,Variables,Caso_imputacion)
des2$Variables <- sub("\\_caso_de_imputacion", "", des2$Variables)
des2=as.data.frame(des2)
df_merge <- merge(des, des2, by = c("ANIO","DEPARTAMENTO","NOMBREMPIO",
"NORDEST","NOMBRE_ESTABLECIMIENTO","DOMINIO_39" ,"Variables"))
# Seleccionar todas las columnas de la tabla B y la columna valores 2 de la tabla A
desf <- df_merge[, c(names(des), "Caso_imputacion")]
desf[, paste0(meses_c[mes - 1])]=format(round(desf[, paste0(meses_c[mes - 1])], 1), big.mark=".",decimal.mark = ",")
desf[, paste0(meses_c[mes])]=format(round(desf[, paste0(meses_c[mes])], 1), big.mark=".",decimal.mark = ",")
desf$variacion=format(round(desf$variacion, 1), big.mark=".",decimal.mark = ",")
desf=arrange(desf,NORDEST)
cambio=c("Empleados_permanentes","Ajuste_sueldos_Empleados_Permanentes",
"Empleados_temporales", "Ajuste_sueldos_Empleados_Temporales",
"Empleados_temporales_agencias","Ajuste_sueldos_Empleados_Temporales_Agencia",
"Aprendices_pasantes","Ajuste_apoyo_sostenimiento_Aprendices_Pasantes",
"Obreros_permanentes","Ajuste_sueldos_Operarios_Permanentes",
"Obreros_temporales","Ajuste_sueldos_Operarios_Temporales",
"Obreros_temporales_agencias","Ajuste_sueldos_Operarios_Temporales_Agencia",
"Aprendices_pasantes_producción","Ajuste_apoyo_sostenimiento_aprendices_pasantes_producción",
"Ajuste_Horas_ordinarias_trabajadas","Ajuste_Horas_extras_trabajadas",
"Ajuste_Producción","Ajuste_Venta_productos_elaborados_país",
"Ajuste_Venta_productos_elaborados_exterior","Valor_existencias_precio_costo")
desf$Variables <- factor(desf$Variables, levels= variablesinte, labels = cambio)
colnames(base_variables_encuesta)[10:length(colnames(base_variables_encuesta))]=c("Empleados_permanentes","Ajuste_sueldos_Empleados_Permanentes",
"Empleados_temporales", "Ajuste_sueldos_Empleados_Temporales",
"Empleados_temporales_agencias","Ajuste_sueldos_Empleados_Temporales_Agencia",
"Aprendices_pasantes","Ajuste_apoyo_sostenimiento_Aprendices_Pasantes",
"Obreros_permanentes","Ajuste_sueldos_Operarios_Permanentes",
"Obreros_temporales","Ajuste_sueldos_Operarios_Temporales",
"Obreros_temporales_agencias","Ajuste_sueldos_Operarios_Temporales_Agencia",
"Aprendices_pasantes_producción","Ajuste_apoyo_sostenimiento_aprendices_pasantes_producción",
"Ajuste_Horas_ordinarias_trabajadas","Ajuste_Horas_extras_trabajadas",
"Ajuste_Producción","Ajuste_Venta_productos_elaborados_país",
"Ajuste_Venta_productos_elaborados_exterior","Valor_existencias_precio_costo")
runApp('Shiny_alertas/app_fun_critica_2.R')
View(desf)
base_panel[base_panel$NORDEST==1117,]
View(base_panel[base_panel$NORDEST==1117,])
View(desf)
capitulo3=c("Ajuste_Producción","Ajuste_Venta_productos_elaborados_país",
"Ajuste_Venta_productos_elaborados_exterior","Valor_existencias_precio_costo" )
variablesinte <- c("NPERS_EP","AJU_SUELD_EP","NPERS_ET","AJU_SUELD_ET","NPERS_ETA","AJU_SUELD_ETA",
"NPERS_APREA","AJU_SUELD_APREA","NPERS_OP","AJU_SUELD_OP","NPERS_OT","AJU_SUELD_OT",
"NPERS_OTA","AJU_SUELD_OTA","NPERS_APREO","AJU_SUELD_APREO","AJU_HORAS_ORDI",
"AJU_HORAS_EXT","AJU_PRODUCCION","AJU_VENTASIN","AJU_VENTASEX","EXISTENCIAS")
for (i in variablesinte) {
base_panel[,i] <- as.numeric(base_panel[,i])
base_panel[,i] <- ifelse(is.na(base_panel[,i]),0,base_panel[,i])
}
base_variables_encuesta <- base_panel %>%
select(ANIO,MES,NOVEDAD,DEPARTAMENTO,NOMBREMPIO,
NORDEST,NOMBRE_ESTABLECIMIENTO,DOMINIO_39,CLASE_CIIU4,
NPERS_EP,AJU_SUELD_EP,NPERS_ET,
AJU_SUELD_ET,NPERS_ETA,
AJU_SUELD_ETA,NPERS_APREA,AJU_SUELD_APREA,
NPERS_OP,AJU_SUELD_OP,NPERS_OT,
AJU_SUELD_OT,NPERS_OTA,
AJU_SUELD_OTA,NPERS_APREO,AJU_SUELD_APREO,
AJU_HORAS_ORDI,AJU_HORAS_EXT,
AJU_PRODUCCION,AJU_VENTASIN,
AJU_VENTASEX,EXISTENCIAS)
base_variables_encuesta=as.data.frame(base_variables_encuesta)
View(base_variables_encuesta[base_variables_encuesta$NORDEST==1117,])
des <- base_variables_encuesta %>%
filter(ANIO==anio & MES%in%c(mes-1,mes))  %>%
pivot_longer(cols=colnames(base_variables_encuesta)[10:length(colnames(base_variables_encuesta))],names_to = "Variables",values_to ="Valores") %>%
pivot_wider(names_from = "MES",values_from = "Valores")
des=as.data.frame(des)
colnames(des)[c(10,11)] <- c(meses_c[mes-1],meses_c[mes])
des$variacion <- round(((abs(des[,paste0(meses_c[mes])]-des[,paste0(meses_c[mes-1])])/des[,paste0(meses_c[mes-1])])*100),2)
des$variacion[des[, paste0(meses_c[mes])] != 0 & des[, paste0(meses_c[mes - 1])] == 0] <- 100
des$variacion[des[, paste0(meses_c[mes])] == 0 & des[, paste0(meses_c[mes - 1])] == 0] <- 0
varinteres=paste0(variablesinte,"_caso_de_imputacion")
View(des[des$NORDEST==1117,])
str(base_variables_encuesta)
des <- base_variables_encuesta %>%
filter(ANIO==anio & MES%in%c(mes-1,mes))  %>%
pivot_longer(cols=colnames(base_variables_encuesta)[10:length(colnames(base_variables_encuesta))],names_to = "Variables",values_to ="Valores") %>%
pivot_wider(names_from = "MES",values_from = "Valores")
View(des[des$NORDEST==1117,])
mes
str(des)
des <- base_variables_encuesta %>%
filter(ANIO==anio & MES%in%c(mes-1,mes))  %>%
pivot_longer(cols=colnames(base_variables_encuesta)[10:length(colnames(base_variables_encuesta))],names_to = "Variables",values_to ="Valores")
View(des[des$NORDEST==1117,])
des <- base_variables_encuesta %>%
filter(ANIO==anio & MES%in%c(mes-1,mes))  %>%
pivot_longer(cols=colnames(base_variables_encuesta)[10:length(colnames(base_variables_encuesta))],names_to = "Variables",values_to ="Valores") %>%
pivot_wider(names_from = "MES",values_from = "Valores")
des=as.data.frame(des)
colnames(des)[c(10,11)] <- c(meses_c[mes-1],meses_c[mes])
View(des[des$NORDEST==1117,])
des2 <- alertas %>% filter(ANIO==anio & MES==mes) %>%
pivot_longer(cols=varinteres,names_to = "Variables",values_to ="Caso_imputacion")  %>%
select(ANIO,DEPARTAMENTO,NOMBREMPIO,NORDEST,NOMBRE_ESTABLECIMIENTO,DOMINIO_39,Variables,Caso_imputacion)
des2$Variables <- sub("\\_caso_de_imputacion", "", des2$Variables)
des2=as.data.frame(des2)
View(des2[des2$NORDEST==1117,])
base_variables_encuesta <- base_panel %>%
select(ANIO,MES,DEPARTAMENTO,NOMBREMPIO,
NORDEST,NOMBRE_ESTABLECIMIENTO,DOMINIO_39,CLASE_CIIU4,
NPERS_EP,AJU_SUELD_EP,NPERS_ET,
AJU_SUELD_ET,NPERS_ETA,
AJU_SUELD_ETA,NPERS_APREA,AJU_SUELD_APREA,
NPERS_OP,AJU_SUELD_OP,NPERS_OT,
AJU_SUELD_OT,NPERS_OTA,
AJU_SUELD_OTA,NPERS_APREO,AJU_SUELD_APREO,
AJU_HORAS_ORDI,AJU_HORAS_EXT,
AJU_PRODUCCION,AJU_VENTASIN,
AJU_VENTASEX,EXISTENCIAS)
base_variables_encuesta=as.data.frame(base_variables_encuesta)
des <- base_variables_encuesta %>%
filter(ANIO==anio & MES%in%c(mes-1,mes))  %>%
pivot_longer(cols=colnames(base_variables_encuesta)[10:length(colnames(base_variables_encuesta))],names_to = "Variables",values_to ="Valores") %>%
pivot_wider(names_from = "MES",values_from = "Valores")
des=as.data.frame(des)
colnames(des)[c(10,11)] <- c(meses_c[mes-1],meses_c[mes])
des$variacion <- round(((abs(des[,paste0(meses_c[mes])]-des[,paste0(meses_c[mes-1])])/des[,paste0(meses_c[mes-1])])*100),2)
des$variacion[des[, paste0(meses_c[mes])] != 0 & des[, paste0(meses_c[mes - 1])] == 0] <- 100
des$variacion[des[, paste0(meses_c[mes])] == 0 & des[, paste0(meses_c[mes - 1])] == 0] <- 0
varinteres=paste0(variablesinte,"_caso_de_imputacion")
des2 <- alertas %>% filter(ANIO==anio & MES==mes) %>%
pivot_longer(cols=varinteres,names_to = "Variables",values_to ="Caso_imputacion")  %>%
select(ANIO,DEPARTAMENTO,NOMBREMPIO,NORDEST,NOMBRE_ESTABLECIMIENTO,DOMINIO_39,Variables,Caso_imputacion)
des2$Variables <- sub("\\_caso_de_imputacion", "", des2$Variables)
des2=as.data.frame(des2)
df_merge <- merge(des, des2, by = c("ANIO","DEPARTAMENTO","NOMBREMPIO",
"NORDEST","NOMBRE_ESTABLECIMIENTO","DOMINIO_39" ,"Variables"))
# Seleccionar todas las columnas de la tabla B y la columna valores 2 de la tabla A
desf <- df_merge[, c(names(des), "Caso_imputacion")]
desf[, paste0(meses_c[mes - 1])]=format(round(desf[, paste0(meses_c[mes - 1])], 1), big.mark=".",decimal.mark = ",")
desf[, paste0(meses_c[mes])]=format(round(desf[, paste0(meses_c[mes])], 1), big.mark=".",decimal.mark = ",")
desf$variacion=format(round(desf$variacion, 1), big.mark=".",decimal.mark = ",")
desf=arrange(desf,NORDEST)
cambio=c("Empleados_permanentes","Ajuste_sueldos_Empleados_Permanentes",
"Empleados_temporales", "Ajuste_sueldos_Empleados_Temporales",
"Empleados_temporales_agencias","Ajuste_sueldos_Empleados_Temporales_Agencia",
"Aprendices_pasantes","Ajuste_apoyo_sostenimiento_Aprendices_Pasantes",
"Obreros_permanentes","Ajuste_sueldos_Operarios_Permanentes",
"Obreros_temporales","Ajuste_sueldos_Operarios_Temporales",
"Obreros_temporales_agencias","Ajuste_sueldos_Operarios_Temporales_Agencia",
"Aprendices_pasantes_producción","Ajuste_apoyo_sostenimiento_aprendices_pasantes_producción",
"Ajuste_Horas_ordinarias_trabajadas","Ajuste_Horas_extras_trabajadas",
"Ajuste_Producción","Ajuste_Venta_productos_elaborados_país",
"Ajuste_Venta_productos_elaborados_exterior","Valor_existencias_precio_costo")
desf$Variables <- factor(desf$Variables, levels= variablesinte, labels = cambio)
colnames(base_variables_encuesta)[10:length(colnames(base_variables_encuesta))]=c("Empleados_permanentes","Ajuste_sueldos_Empleados_Permanentes",
"Empleados_temporales", "Ajuste_sueldos_Empleados_Temporales",
"Empleados_temporales_agencias","Ajuste_sueldos_Empleados_Temporales_Agencia",
"Aprendices_pasantes","Ajuste_apoyo_sostenimiento_Aprendices_Pasantes",
"Obreros_permanentes","Ajuste_sueldos_Operarios_Permanentes",
"Obreros_temporales","Ajuste_sueldos_Operarios_Temporales",
"Obreros_temporales_agencias","Ajuste_sueldos_Operarios_Temporales_Agencia",
"Aprendices_pasantes_producción","Ajuste_apoyo_sostenimiento_aprendices_pasantes_producción",
"Ajuste_Horas_ordinarias_trabajadas","Ajuste_Horas_extras_trabajadas",
"Ajuste_Producción","Ajuste_Venta_productos_elaborados_país",
"Ajuste_Venta_productos_elaborados_exterior","Valor_existencias_precio_costo")
View(base_variables_encuesta)
des <- base_variables_encuesta %>%
filter(ANIO==anio & MES%in%c(mes-1,mes))  %>%
pivot_longer(cols=colnames(base_variables_encuesta)[9:length(colnames(base_variables_encuesta))],names_to = "Variables",values_to ="Valores") %>%
pivot_wider(names_from = "MES",values_from = "Valores")
des=as.data.frame(des)
colnames(des)[c(10,11)] <- c(meses_c[mes-1],meses_c[mes])
des$variacion <- round(((abs(des[,paste0(meses_c[mes])]-des[,paste0(meses_c[mes-1])])/des[,paste0(meses_c[mes-1])])*100),2)
des$variacion[des[, paste0(meses_c[mes])] != 0 & des[, paste0(meses_c[mes - 1])] == 0] <- 100
des$variacion[des[, paste0(meses_c[mes])] == 0 & des[, paste0(meses_c[mes - 1])] == 0] <- 0
varinteres=paste0(variablesinte,"_caso_de_imputacion")
des2 <- alertas %>% filter(ANIO==anio & MES==mes) %>%
pivot_longer(cols=varinteres,names_to = "Variables",values_to ="Caso_imputacion")  %>%
select(ANIO,DEPARTAMENTO,NOMBREMPIO,NORDEST,NOMBRE_ESTABLECIMIENTO,DOMINIO_39,Variables,Caso_imputacion)
des2$Variables <- sub("\\_caso_de_imputacion", "", des2$Variables)
des <- base_variables_encuesta %>%
filter(ANIO==anio & MES%in%c(mes-1,mes))  %>%
pivot_longer(cols=colnames(base_variables_encuesta)[9:length(colnames(base_variables_encuesta))],names_to = "Variables",values_to ="Valores") %>%
pivot_wider(names_from = "MES",values_from = "Valores")
View(des)
des=as.data.frame(des)
colnames(des)[c(9,10)] <- c(meses_c[mes-1],meses_c[mes])
des$variacion <- round(((abs(des[,paste0(meses_c[mes])]-des[,paste0(meses_c[mes-1])])/des[,paste0(meses_c[mes-1])])*100),2)
des$variacion[des[, paste0(meses_c[mes])] != 0 & des[, paste0(meses_c[mes - 1])] == 0] <- 100
des$variacion[des[, paste0(meses_c[mes])] == 0 & des[, paste0(meses_c[mes - 1])] == 0] <- 0
varinteres=paste0(variablesinte,"_caso_de_imputacion")
des2 <- alertas %>% filter(ANIO==anio & MES==mes) %>%
pivot_longer(cols=varinteres,names_to = "Variables",values_to ="Caso_imputacion")  %>%
select(ANIO,DEPARTAMENTO,NOMBREMPIO,NORDEST,NOMBRE_ESTABLECIMIENTO,DOMINIO_39,Variables,Caso_imputacion)
des2$Variables <- sub("\\_caso_de_imputacion", "", des2$Variables)
des2=as.data.frame(des2)
df_merge <- merge(des, des2, by = c("ANIO","DEPARTAMENTO","NOMBREMPIO",
"NORDEST","NOMBRE_ESTABLECIMIENTO","DOMINIO_39" ,"Variables"))
# Seleccionar todas las columnas de la tabla B y la columna valores 2 de la tabla A
desf <- df_merge[, c(names(des), "Caso_imputacion")]
desf[, paste0(meses_c[mes - 1])]=format(round(desf[, paste0(meses_c[mes - 1])], 1), big.mark=".",decimal.mark = ",")
desf[, paste0(meses_c[mes])]=format(round(desf[, paste0(meses_c[mes])], 1), big.mark=".",decimal.mark = ",")
desf$variacion=format(round(desf$variacion, 1), big.mark=".",decimal.mark = ",")
desf=arrange(desf,NORDEST)
cambio=c("Empleados_permanentes","Ajuste_sueldos_Empleados_Permanentes",
"Empleados_temporales", "Ajuste_sueldos_Empleados_Temporales",
"Empleados_temporales_agencias","Ajuste_sueldos_Empleados_Temporales_Agencia",
"Aprendices_pasantes","Ajuste_apoyo_sostenimiento_Aprendices_Pasantes",
"Obreros_permanentes","Ajuste_sueldos_Operarios_Permanentes",
"Obreros_temporales","Ajuste_sueldos_Operarios_Temporales",
"Obreros_temporales_agencias","Ajuste_sueldos_Operarios_Temporales_Agencia",
"Aprendices_pasantes_producción","Ajuste_apoyo_sostenimiento_aprendices_pasantes_producción",
"Ajuste_Horas_ordinarias_trabajadas","Ajuste_Horas_extras_trabajadas",
"Ajuste_Producción","Ajuste_Venta_productos_elaborados_país",
"Ajuste_Venta_productos_elaborados_exterior","Valor_existencias_precio_costo")
desf$Variables <- factor(desf$Variables, levels= variablesinte, labels = cambio)
colnames(base_variables_encuesta)[9:length(colnames(base_variables_encuesta))]=c("Empleados_permanentes","Ajuste_sueldos_Empleados_Permanentes",
"Empleados_temporales", "Ajuste_sueldos_Empleados_Temporales",
"Empleados_temporales_agencias","Ajuste_sueldos_Empleados_Temporales_Agencia",
"Aprendices_pasantes","Ajuste_apoyo_sostenimiento_Aprendices_Pasantes",
"Obreros_permanentes","Ajuste_sueldos_Operarios_Permanentes",
"Obreros_temporales","Ajuste_sueldos_Operarios_Temporales",
"Obreros_temporales_agencias","Ajuste_sueldos_Operarios_Temporales_Agencia",
"Aprendices_pasantes_producción","Ajuste_apoyo_sostenimiento_aprendices_pasantes_producción",
"Ajuste_Horas_ordinarias_trabajadas","Ajuste_Horas_extras_trabajadas",
"Ajuste_Producción","Ajuste_Venta_productos_elaborados_país",
"Ajuste_Venta_productos_elaborados_exterior","Valor_existencias_precio_costo")
desf["MES"] <- mes
desf["LLAVE"] <- as.numeric(paste0(desf$ANIO,desf$MES,desf$NORDEST))
desf$OBSERVACIONES <- NA
desf$EDITADO <- NA
View(desf)
View(desf[desf$NORDEST==1117,])
runApp('Shiny_alertas/app_fun_critica_2.R')
